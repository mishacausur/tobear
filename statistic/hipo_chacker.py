from scipy import stats as st
import numpy as np

# 1
sample_1 = [3071, 3636, 3454, 3151, 2185, 3259, 1727, 2263, 2015,
            2582, 4815, 633, 3186, 887, 2028, 3589, 2564, 1422, 1785,
            3180, 1770, 2716, 2546, 1848, 4644, 3134, 475, 2686,
            1838, 3352]
sample_2 = [1211, 1228, 2157, 3699, 600, 1898, 1688, 1420, 5048, 3007,
            509, 3777, 5583, 3949, 121, 1674, 4300, 1338, 3066,
            3562, 1010, 2311, 462, 863, 2021, 528, 1849, 255,
            1740, 2596]

alpha = 0.05 # уровень статистической значимости
# если p-value окажется меньше него, отвергнем гипотезу

results = st.ttest_ind(sample_1, sample_2)

print('p-значение:', results.pvalue)

if results.pvalue < alpha:
    print('Отвергаем нулевую гипотезу')
else:
    print('Не получилось отвергнуть нулевую гипотезу')

# 2
# время на сайте пользователей, зашедших с логином и паролем
time_on_site_logpass = [368, 113, 328, 447, 1, 156, 335, 233,
                       308, 181, 271, 239, 411, 293, 303,
                       206, 196, 203, 311, 205, 297, 529,
                       373, 217, 416, 206, 1, 128, 16, 214]

# время на сайте пользователей, зашедших через социальные сети
time_on_site_social  = [451, 182, 469, 546, 396, 630, 206,
                        130, 45, 569, 434, 321, 374, 149,
                        721, 350, 347, 446, 406, 365, 203,
                        405, 631, 545, 584, 248, 171, 309,
                        338, 505]


alpha = .01# задайте уровень стат. значимости

results = st.ttest_ind(time_on_site_logpass, time_on_site_social) # проведите стат. тест о равенстве времени, которое проводят на сайте обе группы

# выведите на экран получившееся p-значение
print('p-значение:', results.pvalue)

if results.pvalue < alpha: # сравните p-значение с alpha
    print('Отвергаем нулевую гипотезу')
else:
    print('Не получилось отвергнуть нулевую гипотезу')




people = [
    {"name": "Jenny", "kind": 'Dog'},
    {'name': 'Pussifer', 'kind': 'Cat'}
]

def f(person):
    return  person['kind']

people.sort(key=f)
print(people)
people.sort(key=lambda person: person['name'])
print(people)
